import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,b as n,d as a,e as t,a as p}from"./app-jzX7c5DY.js";const l={},u=n("h1",{id:"数据持久化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#数据持久化"},[n("span",null,"数据持久化")])],-1),r=n("h2",{id:"首选项",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#首选项"},[n("span",null,"首选项")])],-1),k={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/js-apis-data-preferences-0000001427745052-V3#ZH-CN_TOPIC_0000001573928817__delete",target:"_blank",rel:"noopener noreferrer"},d=p(`<h3 id="导入模块" tabindex="-1"><a class="header-anchor" href="#导入模块"><span>导入模块</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> dataPreferences <span class="token keyword">from</span> <span class="token string">&#39;@ohos.data.preferences&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="获取首选项实例" tabindex="-1"><a class="header-anchor" href="#获取首选项实例"><span>获取首选项实例</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code>dataPreferences<span class="token punctuation">.</span><span class="token function">deletePreferences</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">,</span> <span class="token string">&#39;mystore&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>preference <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>reason <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据操作" tabindex="-1"><a class="header-anchor" href="#数据操作"><span>数据操作</span></a></h3><h4 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span>get</span></a></h4><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> preferences<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;startup&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Succeeded in getting value of &#39;startup&#39;. Data: &quot;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to get value of &#39;startup&#39;. code =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>code <span class="token operator">+</span> <span class="token string">&quot;, message =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>如果 get &#39;startup&#39; 没有数据 则返回后面的默认值</p></blockquote><h4 id="put" tabindex="-1"><a class="header-anchor" href="#put"><span>put</span></a></h4><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> promise <span class="token operator">=</span> preferences<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;startup&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Succeeded in putting value of &#39;startup&#39;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to put value of &#39;startup&#39;. code =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>code <span class="token operator">+</span><span class="token string">&quot;, message =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to put value of &#39;startup&#39;. code =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>code <span class="token operator">+</span><span class="token string">&quot;, message =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="delete" tabindex="-1"><a class="header-anchor" href="#delete"><span>delete</span></a></h4><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> promise <span class="token operator">=</span> preferences<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;startup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Succeeded in deleting the key &#39;startup&#39;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to delete the key &#39;startup&#39;. code =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>code <span class="token operator">+</span><span class="token string">&quot;, message =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to delete the key &#39;startup&#39;. code =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>code <span class="token operator">+</span><span class="token string">&quot;, message =&quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关系型数据库" tabindex="-1"><a class="header-anchor" href="#关系型数据库"><span>关系型数据库</span></a></h2>`,13),m={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/js-apis-data-relationalstore-0000001493744128-V3#section797314581314",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>基于 SQLite组件提供的本地数据库,用于管理结构化数据</p><h3 id="导入模块-1" tabindex="-1"><a class="header-anchor" href="#导入模块-1"><span>导入模块</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> relationalStore <span class="token keyword">from</span> <span class="token string">&#39;@ohos.data.relationalStore&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="初始化数据库表" tabindex="-1"><a class="header-anchor" href="#初始化数据库表"><span>初始化数据库表</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">STORE_CONFIG</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&quot;RdbTest.db&quot;</span><span class="token punctuation">,</span>
      securityLevel<span class="token operator">:</span> relationalStore<span class="token punctuation">.</span>SecurityLevel<span class="token punctuation">.</span><span class="token constant">S1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> createSQL <span class="token operator">=</span> &#39;<span class="token constant">CREATE</span> <span class="token constant">TABLE</span> <span class="token constant">IF</span> <span class="token constant">NOT</span> <span class="token constant">EXISTS</span> <span class="token constant">TABLENAME</span> <span class="token punctuation">(</span>
<span class="token constant">ID</span> integer primary key<span class="token punctuation">,</span>
Name <span class="token constant">TEXT</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
<span class="token constant">FINISHED</span> <span class="token constant">BIT</span><span class="token punctuation">,</span>

<span class="token punctuation">)</span>&#39;

relationalStore<span class="token punctuation">.</span><span class="token function">getRdbStore</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">,</span> <span class="token constant">STORE_CONFIG</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> rdbStore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rdbStore<span class="token punctuation">.</span><span class="token function">executeSql</span><span class="token punctuation">(</span>createSQL<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入数据" tabindex="-1"><a class="header-anchor" href="#插入数据"><span>插入数据</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> valueBucket <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;NAME&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Lisa&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;AGE&quot;</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;SALARY&quot;</span><span class="token operator">:</span> <span class="token number">100.5</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;CODES&quot;</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
store<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;EMPLOYEE&quot;</span><span class="token punctuation">,</span> valueBucket<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> rowId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Insert is failed, code is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,message is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Insert is successful, rowId = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rowId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据"><span>更新数据</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> valueBucket <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&quot;NAME&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Rose&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;AGE&quot;</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;SALARY&quot;</span><span class="token operator">:</span> <span class="token number">200.5</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;CODES&quot;</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 设置查询的条件</span>
<span class="token keyword">let</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&quot;EMPLOYEE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 判断 id 是否相等</span>
predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&quot;NAME&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lisa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 相等进行修改</span>
store<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>valueBucket<span class="token punctuation">,</span> predicates<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> rows<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Updated failed, code is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,message is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Updated row count: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rows<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">let</span> predicates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">relationalStore</span><span class="token punctuation">.</span><span class="token function">RdbPredicates</span><span class="token punctuation">(</span><span class="token string">&quot;EMPLOYEE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
predicates<span class="token punctuation">.</span><span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">&quot;NAME&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Lisa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
store<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>predicates<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> rows<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Delete failed, code is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,message is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>err<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Delete rows: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>rows<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function g(b,h){const s=o("ExternalLinkIcon");return c(),i("div",null,[u,r,n("p",null,[n("a",k,[a("官网地址"),t(s)])]),d,n("p",null,[n("a",m,[a("官网地址"),t(s)])]),v])}const q=e(l,[["render",g],["__file","9-dataPersistence.html.vue"]]),w=JSON.parse(`{"path":"/web/harmony/9-dataPersistence.html","title":"🦋 9-数据持久化","lang":"zh-CN","frontmatter":{"title":"🦋 9-数据持久化","tag":["harmony"],"star":true,"description":"数据持久化 首选项 官网地址 导入模块 获取首选项实例 数据操作 get 如果 get 'startup' 没有数据 则返回后面的默认值 put delete 关系型数据库 官网地址 基于 SQLite组件提供的本地数据库,用于管理结构化数据 导入模块 初始化数据库表 插入数据 更新数据 删除数据","head":[["meta",{"property":"og:url","content":"https://soft-vault.com/web/harmony/9-dataPersistence.html"}],["meta",{"property":"og:site_name","content":"Night.Soul"}],["meta",{"property":"og:title","content":"🦋 9-数据持久化"}],["meta",{"property":"og:description","content":"数据持久化 首选项 官网地址 导入模块 获取首选项实例 数据操作 get 如果 get 'startup' 没有数据 则返回后面的默认值 put delete 关系型数据库 官网地址 基于 SQLite组件提供的本地数据库,用于管理结构化数据 导入模块 初始化数据库表 插入数据 更新数据 删除数据"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T16:41:41.000Z"}],["meta",{"property":"article:author","content":"Night.Soul"}],["meta",{"property":"article:tag","content":"harmony"}],["meta",{"property":"article:modified_time","content":"2024-05-11T16:41:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🦋 9-数据持久化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T16:41:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Night.Soul\\",\\"url\\":\\"https://github.com/NightSquirrl\\"}]}"]]},"headers":[{"level":2,"title":"首选项","slug":"首选项","link":"#首选项","children":[{"level":3,"title":"导入模块","slug":"导入模块","link":"#导入模块","children":[]},{"level":3,"title":"获取首选项实例","slug":"获取首选项实例","link":"#获取首选项实例","children":[]},{"level":3,"title":"数据操作","slug":"数据操作","link":"#数据操作","children":[]}]},{"level":2,"title":"关系型数据库","slug":"关系型数据库","link":"#关系型数据库","children":[{"level":3,"title":"导入模块","slug":"导入模块-1","link":"#导入模块-1","children":[]},{"level":3,"title":"初始化数据库表","slug":"初始化数据库表","link":"#初始化数据库表","children":[]},{"level":3,"title":"插入数据","slug":"插入数据","link":"#插入数据","children":[]},{"level":3,"title":"更新数据","slug":"更新数据","link":"#更新数据","children":[]},{"level":3,"title":"删除数据","slug":"删除数据","link":"#删除数据","children":[]}]}],"git":{"createdTime":1709475838000,"updatedTime":1715445701000,"contributors":[{"name":"nightsoul","email":"w1083670160@163.com","commits":1}]},"readingTime":{"minutes":1.49,"words":447},"filePathRelative":"web/harmony/9-dataPersistence.md","localizedDate":"2024年3月3日","excerpt":"\\n<h2>首选项</h2>\\n<p><a href=\\"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/js-apis-data-preferences-0000001427745052-V3#ZH-CN_TOPIC_0000001573928817__delete\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官网地址</a></p>\\n<h3>导入模块</h3>\\n<div class=\\"language-typescript\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">import</span> dataPreferences <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'@ohos.data.preferences'</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}`);export{q as comp,w as data};
