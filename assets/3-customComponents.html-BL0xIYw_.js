import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-jzX7c5DY.js";const e={},p=t(`<h2 id="同一文件内" tabindex="-1"><a class="header-anchor" href="#同一文件内"><span>同一文件内</span></a></h2><blockquote><p>父组件 &amp; 子组件</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct Father<span class="token punctuation">{</span>
  
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 调用子组件</span>
    <span class="token function">Son</span><span class="token punctuation">(</span><span class="token punctuation">{</span>title<span class="token operator">:</span><span class="token string">&quot;我是标题&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct Son<span class="token punctuation">{</span>
  <span class="token keyword">private</span> title<span class="token operator">:</span><span class="token builtin">string</span>
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="单独组件封装" tabindex="-1"><a class="header-anchor" href="#单独组件封装"><span>单独组件封装</span></a></h2><blockquote><p>子组件</p></blockquote><p>新建文件**/components/TestSon.ets</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
<span class="token keyword">export</span> struct TestSon <span class="token punctuation">{</span>
   <span class="token keyword">private</span> title<span class="token operator">:</span><span class="token builtin">string</span>
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>父组件</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>TestSon<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;**/TestSon&quot;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Entry</span></span>
<span class="token decorator"><span class="token at operator">@</span><span class="token function">Component</span></span>
struct Father<span class="token punctuation">{</span>
  
  <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 调用子组件</span>
    <span class="token function">TestSon</span><span class="token punctuation">(</span><span class="token punctuation">{</span>title<span class="token operator">:</span><span class="token string">&quot;我是标题&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义构建函数" tabindex="-1"><a class="header-anchor" href="#自定义构建函数"><span>自定义构建函数</span></a></h2><h3 id="全局自定义构建函数" tabindex="-1"><a class="header-anchor" href="#全局自定义构建函数"><span>全局自定义构建函数</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Builder</span></span> <span class="token keyword">function</span> <span class="token function">SelfComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    xxx
  <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="局部自定义函数" tabindex="-1"><a class="header-anchor" href="#局部自定义函数"><span>局部自定义函数</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Builder</span></span> <span class="token function">SelfComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    xxx
  <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="公共样式" tabindex="-1"><a class="header-anchor" href="#公共样式"><span>公共样式</span></a></h2><h3 id="全局公共样式" tabindex="-1"><a class="header-anchor" href="#全局公共样式"><span>全局公共样式</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Styles</span></span> <span class="token keyword">function</span> <span class="token function">testStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="局部公共样式" tabindex="-1"><a class="header-anchor" href="#局部公共样式"><span>局部公共样式</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Styles</span></span>  <span class="token function">testStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特定组件的样式" tabindex="-1"><a class="header-anchor" href="#特定组件的样式"><span>特定组件的样式</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token decorator"><span class="token at operator">@</span><span class="token function">Extend</span></span><span class="token punctuation">(</span>Text<span class="token punctuation">)</span> <span class="token keyword">function</span> <span class="token function">testStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token function">fontColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">fontSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","3-customComponents.html.vue"]]),k=JSON.parse('{"path":"/web/harmony/3-customComponents.html","title":"🦋 3-自定义组件","lang":"zh-CN","frontmatter":{"title":"🦋 3-自定义组件","tag":["harmony"],"star":true,"description":"同一文件内 父组件 & 子组件 单独组件封装 子组件 新建文件**/components/TestSon.ets 父组件 自定义构建函数 全局自定义构建函数 局部自定义函数 公共样式 全局公共样式 局部公共样式 特定组件的样式","head":[["meta",{"property":"og:url","content":"https://soft-vault.com/web/harmony/3-customComponents.html"}],["meta",{"property":"og:site_name","content":"Night.Soul"}],["meta",{"property":"og:title","content":"🦋 3-自定义组件"}],["meta",{"property":"og:description","content":"同一文件内 父组件 & 子组件 单独组件封装 子组件 新建文件**/components/TestSon.ets 父组件 自定义构建函数 全局自定义构建函数 局部自定义函数 公共样式 全局公共样式 局部公共样式 特定组件的样式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T16:41:41.000Z"}],["meta",{"property":"article:author","content":"Night.Soul"}],["meta",{"property":"article:tag","content":"harmony"}],["meta",{"property":"article:modified_time","content":"2024-05-11T16:41:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🦋 3-自定义组件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T16:41:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Night.Soul\\",\\"url\\":\\"https://github.com/NightSquirrl\\"}]}"]]},"headers":[{"level":2,"title":"同一文件内","slug":"同一文件内","link":"#同一文件内","children":[]},{"level":2,"title":"单独组件封装","slug":"单独组件封装","link":"#单独组件封装","children":[]},{"level":2,"title":"自定义构建函数","slug":"自定义构建函数","link":"#自定义构建函数","children":[{"level":3,"title":"全局自定义构建函数","slug":"全局自定义构建函数","link":"#全局自定义构建函数","children":[]},{"level":3,"title":"局部自定义函数","slug":"局部自定义函数","link":"#局部自定义函数","children":[]}]},{"level":2,"title":"公共样式","slug":"公共样式","link":"#公共样式","children":[{"level":3,"title":"全局公共样式","slug":"全局公共样式","link":"#全局公共样式","children":[]},{"level":3,"title":"局部公共样式","slug":"局部公共样式","link":"#局部公共样式","children":[]},{"level":3,"title":"特定组件的样式","slug":"特定组件的样式","link":"#特定组件的样式","children":[]}]}],"git":{"createdTime":1709454942000,"updatedTime":1715445701000,"contributors":[{"name":"nightsoul","email":"w1083670160@163.com","commits":1}]},"readingTime":{"minutes":0.58,"words":174},"filePathRelative":"web/harmony/3-customComponents.md","localizedDate":"2024年3月3日","excerpt":"<h2>同一文件内</h2>\\n<blockquote>\\n<p>父组件 &amp; 子组件</p>\\n</blockquote>\\n<div class=\\"language-typescript\\" data-ext=\\"ts\\" data-title=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token decorator\\"><span class=\\"token at operator\\">@</span><span class=\\"token function\\">Entry</span></span>\\n<span class=\\"token decorator\\"><span class=\\"token at operator\\">@</span><span class=\\"token function\\">Component</span></span>\\nstruct Father<span class=\\"token punctuation\\">{</span>\\n  \\n  <span class=\\"token function\\">build</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 调用子组件</span>\\n    <span class=\\"token function\\">Son</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>title<span class=\\"token operator\\">:</span><span class=\\"token string\\">\\"我是标题\\"</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token decorator\\"><span class=\\"token at operator\\">@</span><span class=\\"token function\\">Component</span></span>\\nstruct Son<span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">private</span> title<span class=\\"token operator\\">:</span><span class=\\"token builtin\\">string</span>\\n  <span class=\\"token function\\">build</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    \\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
