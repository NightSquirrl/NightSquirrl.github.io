import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{g as r,o as p,c as e,h as k,b as t,F as l,i as d,e as m,a as v}from"./app-jzX7c5DY.js";const g="/assets/1-CUaKTvkb.jpg",h="/assets/2-CK9ayXI4.jpg",f="/assets/3-BGilcWW5.jpg",y="/assets/4-XdBNwWho.jpg",b="/assets/5-Dq6iuElg.jpg",w="/assets/6-CXkt8ESl.jpg",q="/assets/7-D11IgP5J.jpg",x="/assets/8-DB6aEUuD.jpg",_="/assets/9-BeQNusZs.jpg",I="/assets/10-C5MSbfkv.jpg",W="/assets/11-BWVzN40l.jpg",j="/assets/12-BAdLWcQx.jpg",N="/assets/13-DpulSo_h.jpg";let o=function(n){this.el=document.getElementsByClassName(n.el)[0],this.oItems=this.el.getElementsByTagName("div"),this.column=n.column,this.gap=n.gap,this.itemWidth=(this.el.offsetWidth-(this.column-1)*this.gap)/this.column,this.heighArray=[],this.init()};o.prototype.init=function(){this.render()};o.prototype.render=async function(){let n=null;for(let s=0;s<this.oItems.length;s++)if(n=this.oItems[s],n.style.width=this.itemWidth+"px",s<this.column)n.style.top="0px",n.style.left=s*(this.itemWidth+this.gap)+"px",this.heighArray.push(await T(n));else{let a=B(this.heighArray);n.style.left=this.oItems[a].offsetLeft+"px",n.style.top=this.heighArray[a]+this.gap+"px",this.heighArray[a]+=n.offsetHeight+this.gap}};function B(n){return n.indexOf(Math.min.apply(null,n))}function T(n){return new Promise(s=>{n.getElementsByTagName("img")[0].onload=a=>{s(a.target.offsetHeight)}})}const A={class:"wrapper"},M=["src","alt"],S={__name:"WaterfallFlow",setup(n){const s=[g,h,f,y,b,w,q,x,_,I,W,j,N];return r(()=>{new o({el:"wrapper",column:5,gap:10})}),(a,L)=>(p(),e(l,null,[k('  div.wrapper>div*13.wf-item>img[src="./images/$.jpg"]'),t("div",A,[(p(),e(l,null,d(s,(u,c)=>t("div",{class:"wf-item",key:c},[t("img",{src:u,class:"wf-img",alt:c.toString()},null,8,M)])),64))])],2112))}},F=i(S,[["__scopeId","data-v-3237aea5"],["__file","WaterfallFlow.vue"]]),H=v(`<blockquote><p>HTML 代码</p></blockquote><details><summary>点击展开代码</summary><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wf-item<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(image,index) in images<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>  <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wf-img<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index.toString()<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="css-方式" tabindex="-1"><a class="header-anchor" href="#css-方式"><span>css 方式</span></a></h2><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 设置最外层的宽度以及使用 grid 布局,5 列,间隙是 10px */</span>
<span class="token selector">.wrapper</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>
    <span class="token property">columns</span><span class="token punctuation">:</span> 5<span class="token punctuation">;</span>
    <span class="token property">column-gap</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token selector">.wf-img</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="js-方式" tabindex="-1"><a class="header-anchor" href="#js-方式"><span>js 方式</span></a></h2><details><summary>点击展开代码</summary><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">Waterfall</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>el<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>oItems <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>el<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>column <span class="token operator">=</span> options<span class="token punctuation">.</span>column<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>gap <span class="token operator">=</span> options<span class="token punctuation">.</span>gap<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>itemWidth <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>el<span class="token punctuation">.</span>offsetWidth <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>column <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gap<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">this</span><span class="token punctuation">.</span>column<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>heighArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>


<span class="token class-name">Waterfall</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Waterfall</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> item <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token keyword">let</span> minIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>oItems<span class="token punctuation">.</span>length<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        item <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>oItems<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        item<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>itemWidth <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>column<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            item<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token string">&quot;0px&quot;</span>
            item<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> index <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>itemWidth <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gap<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>heighArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">getItemHeight</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>

            <span class="token keyword">let</span> minIndex <span class="token operator">=</span> <span class="token function">getMinIndex</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>heighArray<span class="token punctuation">)</span>
            item<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>oItems<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
            item<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>heighArray<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gap <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>heighArray<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">+=</span> item<span class="token punctuation">.</span>offsetHeight <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>gap
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getMinIndex</span><span class="token punctuation">(</span><span class="token parameter">heightArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> heightArray<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> heightArray<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">getItemHeight</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        item<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Waterfall


<span class="token comment">// 调用</span>

<span class="token keyword">new</span> <span class="token class-name">Waterfall</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;wrapper&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">column</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gap</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>原理解释: 首先接收所有的参数 计算出每一个图片应该所占的宽度 获取到所有的图片 item 使用 for 进行动态的计算 top 和 left(使用 absolute 布局) 首先是绘制出第一行的位置也就是条件 &lt; this.column 他们的 top 都是 0 left 是当前的索引值 * (当前的宽度+间隔),当每一个的位置确定之后需要将他们的高度存储在数组中 然后开始绘制其他的行 计算出最小的高度,决定了下一张图片的 top,而下一张图片的 left = (最小值的索引)对应的 dom 的 offsetLeft</p></blockquote></details>`,6),E={style:{height:"200px"}},C={__name:"WaterfallFlow.html",setup(n){return(s,a)=>(p(),e("div",null,[H,t("div",E,[m(F)])]))}},V=i(C,[["__file","WaterfallFlow.html.vue"]]),z=JSON.parse('{"path":"/web/common/WaterfallFlow.html","title":"🤔 瀑布流","lang":"zh-CN","frontmatter":{"title":"🤔 瀑布流","tag":["算法"],"description":"HTML 代码 点击展开代码 css 方式 js 方式 点击展开代码 原理解释: 首先接收所有的参数 计算出每一个图片应该所占的宽度 获取到所有的图片 item 使用 for 进行动态的计算 top 和 left(使用 absolute 布局) 首先是绘制出第一行的位置也就是条件 < this.column 他们的 top 都是 0 left 是当前的...","head":[["meta",{"property":"og:url","content":"https://soft-vault.com/web/common/WaterfallFlow.html"}],["meta",{"property":"og:site_name","content":"Night.Soul"}],["meta",{"property":"og:title","content":"🤔 瀑布流"}],["meta",{"property":"og:description","content":"HTML 代码 点击展开代码 css 方式 js 方式 点击展开代码 原理解释: 首先接收所有的参数 计算出每一个图片应该所占的宽度 获取到所有的图片 item 使用 for 进行动态的计算 top 和 left(使用 absolute 布局) 首先是绘制出第一行的位置也就是条件 < this.column 他们的 top 都是 0 left 是当前的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-02T12:25:25.000Z"}],["meta",{"property":"article:author","content":"Night.Soul"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:modified_time","content":"2024-06-02T12:25:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🤔 瀑布流\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-02T12:25:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Night.Soul\\",\\"url\\":\\"https://github.com/NightSquirrl\\"}]}"]]},"headers":[{"level":2,"title":"css 方式","slug":"css-方式","link":"#css-方式","children":[]},{"level":2,"title":"js 方式","slug":"js-方式","link":"#js-方式","children":[]}],"git":{"createdTime":1699094106000,"updatedTime":1717331125000,"contributors":[{"name":"nightsoul","email":"w1083670160@163.com","commits":2}]},"readingTime":{"minutes":1.35,"words":404},"filePathRelative":"web/common/WaterfallFlow.md","localizedDate":"2023年11月4日","excerpt":"<blockquote>\\n<p>HTML 代码</p>\\n</blockquote>\\n<details>\\n<summary>点击展开代码</summary>\\n<div class=\\"language-vue\\" data-ext=\\"vue\\" data-title=\\"vue\\"><pre class=\\"language-vue\\"><code>  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>wrapper<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>div</span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>wf-item<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">v-for</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>(image,index) in images<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">:key</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>index<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>img</span>  <span class=\\"token attr-name\\">:src</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>image<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">class</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>wf-img<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token attr-name\\">:alt</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>index.toString()<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">/&gt;</span></span>\\n    <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n  <span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>div</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div></details>","autoDesc":true}');export{V as comp,z as data};
