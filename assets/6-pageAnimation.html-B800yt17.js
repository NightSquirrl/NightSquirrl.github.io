import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as p,c,b as n,d as t,e as a,a as e}from"./app-jzX7c5DY.js";const i={},r=e('<h1 id="页面动画" tabindex="-1"><a class="header-anchor" href="#页面动画"><span>页面动画</span></a></h1><h2 id="属性动画" tabindex="-1"><a class="header-anchor" href="#属性动画"><span>属性动画</span></a></h2><p>给组件添加 animation属性添加动画</p><p><code>width</code>,<code>height</code>,<code>Opacity</code>,<code>backgroundColor</code>,<code>scale</code>,<code>rotate</code>,<code>translate</code></p>',4),d=n("thead",null,[n("tr",null,[n("th",null,"名称"),n("th",null,"参数类型"),n("th",null,"必填"),n("th",null,"描述")])],-1),u=n("tr",null,[n("td",null,"duration"),n("td",null,"number"),n("td",null,"否"),n("td",null,[n("code",null,"设置动画时长。默认值：1000单位：毫秒从API version 9开始，该接口支持在ArkTS卡片中使用。**说明：**- 在ArkTS卡片上最大动画持续时间为1000毫秒。- 设置浮点型类型的值时，向下取整；设置值为1.2，按照1处理。")])],-1),k=n("tr",null,[n("td",null,"tempo"),n("td",null,"number"),n("td",null,"否"),n("td",null,[n("code",null,"动画播放速度。数值越大，动画播放速度越快，数值越小，播放速度越慢。值为0时，表示不存在动画。默认值：1")])],-1),m=n("td",null,"curve",-1),h={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/ts-appendix-enums-0000001478061741-V3#ZH-CN_TOPIC_0000001574248789__curve",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/js-apis-curve-0000001427585072-V3#ZH-CN_TOPIC_0000001523808354__icurve",target:"_blank",rel:"noopener noreferrer"},b=n("td",null,"否",-1),g=n("td",null,[n("code",null,"设置动画曲线。默认值：Curve.EaseInOut从API version 9开始，该接口支持在ArkTS卡片中使用。")],-1),_=n("tr",null,[n("td",null,"delay"),n("td",null,"number"),n("td",null,"否"),n("td",null,[n("code",null,"设置动画延迟执行的时长。默认值：0，不延迟播放。单位：毫秒取值范围：[0, +∞)**说明：**设置浮点型类型的值时，向下取整。例如，设置值为1.2，按照1处理。")])],-1),y=n("tr",null,[n("td",null,"iterations"),n("td",null,"number"),n("td",null,"否"),n("td",null,[n("code",null,"设置播放次数。默认值：1取值范围：[-1, +∞)**说明：**设置为-1时表示无限次播放。设置为0时表示无动画效果。")])],-1),f=n("td",null,"playMode",-1),x={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/ts-appendix-enums-0000001478061741-V3#ZH-CN_TOPIC_0000001574248789__playmode",target:"_blank",rel:"noopener noreferrer"},T=n("td",null,"否",-1),A=n("td",null,[n("code",null,"设置动画播放模式，默认播放完成后重头开始播放。默认值：PlayMode.Normal从API version 9开始，该接口支持在ArkTS卡片中使用。")],-1),C=n("tr",null,[n("td",null,"onFinish"),n("td",null,[n("code",null,"() => void")]),n("td",null,"否"),n("td",null,[n("code",null,"状态回调，动画播放完成时触发。从API version 9开始，该接口支持在ArkTS卡片中使用。**说明：**当iterations设置为-1时，动画效果无限循环不会停止，所以不会触发此回调")])],-1),I=e(`<h2 id="显示动画" tabindex="-1"><a class="header-anchor" href="#显示动画"><span>显示动画</span></a></h2><p>通过全局的 animateTo修改组件的属性</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token function">animateTo</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    duration<span class="token operator">:</span><span class="token number">200</span> <span class="token comment">// 上方表格中的属性</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Demo</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token function">Button</span><span class="token punctuation">(</span><span class="token string">&#39;change rotate angle&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">margin</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> angle<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rotateAngle <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">animateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      duration<span class="token operator">:</span> <span class="token number">1200</span><span class="token punctuation">,</span>
      curve<span class="token operator">:</span> Curve<span class="token punctuation">.</span>Friction<span class="token punctuation">,</span>
      delay<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      iterations<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 设置-1表示动画无限循环</span>
      playMode<span class="token operator">:</span> PlayMode<span class="token punctuation">.</span>Alternate<span class="token punctuation">,</span>
      <span class="token function-variable function">onFinish</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;play end&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>rotateAngle <span class="token operator">=</span> <span class="token number">90</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组件转场动画" tabindex="-1"><a class="header-anchor" href="#组件转场动画"><span>组件转场动画</span></a></h2><p><code>transition</code>组件插入和移除的过度动画</p>`,7),w={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/ts-explicit-animation-0000001478341181-V3",target:"_blank",rel:"noopener noreferrer"},P=n("thead",null,[n("tr",null,[n("th",null,"参数名称"),n("th",null,"参数"),n("th",null,"必填"),n("th",null,"参数描述")])],-1),N=n("td",null,"slide",-1),S={href:"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/ts-page-transition-animation-0000001477981233-V3#ZH-CN_TOPIC_0000001523489146__slideeffect%E6%9E%9A%E4%B8%BE%E8%AF%B4%E6%98%8E",target:"_blank",rel:"noopener noreferrer"},V=n("td",null,"否",-1),E=n("td",null,[n("code",null,"设置页面转场时的滑入滑出效果。默认值：SlideEffect.Right")],-1),O=n("tr",null,[n("td",null,"translate"),n("td",null,[n("code",null,"{x? : number |string,y? : number |string,z? : number |string}")]),n("td"),n("td",null,[n("code",null,"设置页面转场时的平移效果，为入场时起点和退场时终点的值，和slide同时设置时默认生效slide。- x：横向的平移距离。- y：纵向的平移距离。- z：竖向的平移距离。")])],-1),Z=n("tr",null,[n("td",null,"scale"),n("td",null,[n("code",null,"{x? : number,y? : number,z? : number,centerX? : number |string,centerY? : number |string}")]),n("td"),n("td",null,[n("code",null,"设置页面转场时的缩放效果，为入场时起点和退场时终点的值。- x：横向放大倍数（或缩小比例）。- y：纵向放大倍数（或缩小比例）。- z：竖向放大倍数（或缩小比例）。- centerX、centerY缩放中心点。- 中心点为0时，默认的是组件的左上角。")])],-1),B=n("tr",null,[n("td",null,"opacity"),n("td",null,"number"),n("td",null,"否"),n("td",null,[n("code",null,"设置入场的起点透明度值或者退场的终点透明度值。默认值：1")])],-1),M=e(`<h3 id="slideeffect枚举说明" tabindex="-1"><a class="header-anchor" href="#slideeffect枚举说明"><span>SlideEffect枚举说明</span></a></h3><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">Left</td><td style="text-align:left;">设置到入场时表示从左边滑入，出场时表示滑出到左边。</td></tr><tr><td style="text-align:left;">Right</td><td style="text-align:left;">设置到入场时表示从右边滑入，出场时表示滑出到右边。</td></tr><tr><td style="text-align:left;">Top</td><td style="text-align:left;">设置到入场时表示从上边滑入，出场时表示滑出到上边。</td></tr><tr><td style="text-align:left;">Bottom</td><td style="text-align:left;">设置到入场时表示从下边滑入，出场时表示滑出到下边。</td></tr></tbody></table><h3 id="事件" tabindex="-1"><a class="header-anchor" href="#事件"><span>事件</span></a></h3><table><thead><tr><th style="text-align:left;">事件</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:left;">onEnter(event: (type?: RouteType, progress?: number) =&gt; void)</td><td style="text-align:left;"><code>回调入参为当前入场动画的归一化进度[0 - 1]。- type：跳转方法。- progress：当前进度。触发该事件的条件：逐帧回调，直到入场动画结束，progress从0变化到1。</code></td></tr><tr><td style="text-align:left;">onExit(event: (type?: RouteType, progress?: number) =&gt; void)</td><td style="text-align:left;"><code>回调入参为当前退场动画的归一化进度[0 - 1]。- type：跳转方法。- progress：当前进度。触发该事件的条件：逐帧回调，直到退场动画结束，progress从0变化到1。</code></td></tr></tbody></table><blockquote><p>Demo</p></blockquote><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// Image的显示和消失配置为不同的过渡效果</span>
<span class="token function">Image</span><span class="token punctuation">(</span><span class="token function">$r</span><span class="token punctuation">(</span><span class="token string">&#39;app.media.testImg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> TransitionType<span class="token punctuation">.</span>Insert<span class="token punctuation">,</span> scale<span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">1.0</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> TransitionType<span class="token punctuation">.</span>Delete<span class="token punctuation">,</span> rotate<span class="token operator">:</span> <span class="token punctuation">{</span> angle<span class="token operator">:</span> <span class="token number">180</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>



<span class="token comment">// 点击Button控制Image的显示和消失</span>
<span class="token function">animateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span> duration<span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token string">&#39;hide&#39;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>show <span class="token operator">=</span> <span class="token string">&#39;show&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>flag
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function z(D,H){const s=l("ExternalLinkIcon");return p(),c("div",null,[r,n("table",null,[d,n("tbody",null,[u,k,n("tr",null,[m,n("td",null,[t("string | "),n("a",h,[t("Curve"),a(s)]),t(" | "),n("a",v,[t("ICurve"),a(s)]),t("9+")]),b,g]),_,y,n("tr",null,[f,n("td",null,[n("a",x,[t("PlayMode"),a(s)])]),T,A]),C])]),I,n("p",null,[t("需要配合"),n("a",w,[t("animateTo"),a(s)]),t("才能生效，动效时长、曲线、延时跟随animateTo中的配置）")]),n("table",null,[P,n("tbody",null,[n("tr",null,[N,n("td",null,[n("a",S,[t("SlideEffect"),a(s)])]),V,E]),O,Z,B])]),M])}const R=o(i,[["render",z],["__file","6-pageAnimation.html.vue"]]),j=JSON.parse('{"path":"/web/harmony/6-pageAnimation.html","title":"🦋 6-页面动画","lang":"zh-CN","frontmatter":{"title":"🦋 6-页面动画","tag":["harmony"],"star":true,"description":"页面动画 属性动画 给组件添加 animation属性添加动画 width,height,Opacity,backgroundColor,scale,rotate,translate 显示动画 通过全局的 animateTo修改组件的属性 Demo 组件转场动画 transition组件插入和移除的过度动画 需要配合animateTo才能生效，动效时长...","head":[["meta",{"property":"og:url","content":"https://soft-vault.com/web/harmony/6-pageAnimation.html"}],["meta",{"property":"og:site_name","content":"Night.Soul"}],["meta",{"property":"og:title","content":"🦋 6-页面动画"}],["meta",{"property":"og:description","content":"页面动画 属性动画 给组件添加 animation属性添加动画 width,height,Opacity,backgroundColor,scale,rotate,translate 显示动画 通过全局的 animateTo修改组件的属性 Demo 组件转场动画 transition组件插入和移除的过度动画 需要配合animateTo才能生效，动效时长..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-11T16:41:41.000Z"}],["meta",{"property":"article:author","content":"Night.Soul"}],["meta",{"property":"article:tag","content":"harmony"}],["meta",{"property":"article:modified_time","content":"2024-05-11T16:41:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🦋 6-页面动画\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-11T16:41:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Night.Soul\\",\\"url\\":\\"https://github.com/NightSquirrl\\"}]}"]]},"headers":[{"level":2,"title":"属性动画","slug":"属性动画","link":"#属性动画","children":[]},{"level":2,"title":"显示动画","slug":"显示动画","link":"#显示动画","children":[]},{"level":2,"title":"组件转场动画","slug":"组件转场动画","link":"#组件转场动画","children":[{"level":3,"title":"SlideEffect枚举说明","slug":"slideeffect枚举说明","link":"#slideeffect枚举说明","children":[]},{"level":3,"title":"事件","slug":"事件","link":"#事件","children":[]}]}],"git":{"createdTime":1709475838000,"updatedTime":1715445701000,"contributors":[{"name":"nightsoul","email":"w1083670160@163.com","commits":1}]},"readingTime":{"minutes":3.77,"words":1131},"filePathRelative":"web/harmony/6-pageAnimation.md","localizedDate":"2024年3月3日","excerpt":"\\n<h2>属性动画</h2>\\n<p>给组件添加 animation属性添加动画</p>\\n<p><code>width</code>,<code>height</code>,<code>Opacity</code>,<code>backgroundColor</code>,<code>scale</code>,<code>rotate</code>,<code>translate</code></p>\\n<table>\\n<thead>\\n<tr>\\n<th>名称</th>\\n<th>参数类型</th>\\n<th>必填</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>duration</td>\\n<td>number</td>\\n<td>否</td>\\n<td><code>设置动画时长。默认值：1000单位：毫秒从API version 9开始，该接口支持在ArkTS卡片中使用。**说明：**- 在ArkTS卡片上最大动画持续时间为1000毫秒。- 设置浮点型类型的值时，向下取整；设置值为1.2，按照1处理。</code></td>\\n</tr>\\n<tr>\\n<td>tempo</td>\\n<td>number</td>\\n<td>否</td>\\n<td><code>动画播放速度。数值越大，动画播放速度越快，数值越小，播放速度越慢。值为0时，表示不存在动画。默认值：1</code></td>\\n</tr>\\n<tr>\\n<td>curve</td>\\n<td>string | <a href=\\"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/ts-appendix-enums-0000001478061741-V3#ZH-CN_TOPIC_0000001574248789__curve\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Curve</a> | <a href=\\"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/js-apis-curve-0000001427585072-V3#ZH-CN_TOPIC_0000001523808354__icurve\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ICurve</a>9+</td>\\n<td>否</td>\\n<td><code>设置动画曲线。默认值：Curve.EaseInOut从API version 9开始，该接口支持在ArkTS卡片中使用。</code></td>\\n</tr>\\n<tr>\\n<td>delay</td>\\n<td>number</td>\\n<td>否</td>\\n<td><code>设置动画延迟执行的时长。默认值：0，不延迟播放。单位：毫秒取值范围：[0, +∞)**说明：**设置浮点型类型的值时，向下取整。例如，设置值为1.2，按照1处理。</code></td>\\n</tr>\\n<tr>\\n<td>iterations</td>\\n<td>number</td>\\n<td>否</td>\\n<td><code>设置播放次数。默认值：1取值范围：[-1, +∞)**说明：**设置为-1时表示无限次播放。设置为0时表示无动画效果。</code></td>\\n</tr>\\n<tr>\\n<td>playMode</td>\\n<td><a href=\\"https://developer.harmonyos.com/cn/docs/documentation/doc-references-V3/ts-appendix-enums-0000001478061741-V3#ZH-CN_TOPIC_0000001574248789__playmode\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">PlayMode</a></td>\\n<td>否</td>\\n<td><code>设置动画播放模式，默认播放完成后重头开始播放。默认值：PlayMode.Normal从API version 9开始，该接口支持在ArkTS卡片中使用。</code></td>\\n</tr>\\n<tr>\\n<td>onFinish</td>\\n<td><code>() =&gt; void</code></td>\\n<td>否</td>\\n<td><code>状态回调，动画播放完成时触发。从API version 9开始，该接口支持在ArkTS卡片中使用。**说明：**当iterations设置为-1时，动画效果无限循环不会停止，所以不会触发此回调</code></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{R as comp,j as data};
